#!/bin/bash
# Usage: bin/compile <build-dir> <cache-dir>

set -e
set -o pipefail

# START CONFIG
WORDPRESS_VERSION=3.5.1
HIPHOP_VERSION=2.0.0
#
WORDPRESS_URL="http://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz"
HIPHOP_URL="https://dl.dropbox.com/u/33609233/stackato-buildpack-wordpress/hiphop-php-${HIPHOP_VERSION}.tar.gz"
# END CONFIG

# parse and derive params
BUILDPACK_DIR=$(cd $(dirname $0); cd ..; pwd) # absolute path of buildpack
BUILD_DIR=$1
CACHE_DIR=$2

echo "-----> compile params: BUILDPACK_DIR: $BUILDPACK_DIR BUILD_DIR: $BUILD_DIR CACHE_DIR:$CACHE_DIR"

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

cd ${BUILD_DIR}
mkdir -p runtimes
echo "-----> Installing HipHop v${HIPHOP_VERSION}"
if [ ! -d ./runtimes/hiphop-php ]; then
  cd ./runtimes
  curl --silent --max-time 60 --location $HIPHOP_URL | tar xz
fi

cd ${BUILD_DIR}
echo "-----> Installing WordPress v${WORDPRESS_VERSION}"
if [ ! -d ./public/wordpress ]; then
  cd ./public/
  curl --silent --max-time 60 --location $WORDPRESS_URL | tar xz
  echo "Patching WordPress source to make it HipHop compliant" | indent
  sed --in-place --expression \
    "s|define( 'OBJECT', 'OBJECT', true );|define('OBJECT', 'OBJECT'); define('Object', 'OBJECT'); define('object', 'OBJECT');|g" \
    wordpress/wp-includes/wp-db.php
  echo "<?php define('WP_USE_THEMES', true); require('./wordpress/wp-blog-header.php');" > index.php
fi

echo "-----> Copying config templates"
cp -Rf ${BUILDPACK_DIR}/config ${BUILD_DIR} | indent

echo "-----> Creating bin/ scripts"
mkdir -p ${BUILD_DIR}/bin
cd ${BUILD_DIR}

# Setup
echo "Writing setup.sh script" | indent
cat >bin/setup.sh <<EOF
#!/usr/bin/env bash

BASE_DIR=\$(cd \$(dirname \$0); cd ..; pwd) # absolute path
export BASE_DIR

cd \$BASE_DIR
mkdir -p run/nginx_cache

echo "-----> Writing config files..."
erb config/hiphop/hhvm.hdf.erb > run/hhvm.hdf
erb config/wordpress/wp-config.php.erb > public/wp-config.php

chmod 755 public/wp-content

# Expose Heroku config vars to PHP-FPM processes
#for var in \`env | cut -f1 -d=\`; do
#  echo "env[\$var] = \\$\${var}" >> /app/vendor/php/etc/php-fpm.conf
#done

mkdir -p logs
touch logs/access.log logs/error.log 
EOF
chmod +x bin/setup.sh

# Cron job
echo "Writing cron.sh script" | indent
cat >bin/cron.sh <<EOF
#!/usr/bin/env bash

setup.sh && cd public && php wp-cron.php
EOF
chmod +x bin/cron.sh

# Startup
echo "Writing start.sh script" | indent
cat >bin/start.sh <<EOF
#!/usr/bin/env bash
HELP="bin/start {port} {loglevel}"
if [[ -n "\$1" ]]; then
  export PORT=\$1
else
  echo \$HELP
  exit 1
fi
if [[ -n "\$2" ]]; then
  export LOGLEVEL=\$2
else
  export LOGLEVEL="Error"
fi

BASE_DIR=\$(cd \$(dirname \$0); cd ..; pwd) # absolute path
echo "-----> BASE_DIR: \$BASE_DIR"
cd \$BASE_DIR

bin/setup.sh

echo "-----> Using LOGLEVEL: \$LOGLEVEL [options: None | Error (default) | Warning | Info | Verbose ]"
killall -q tail 
(tail -qF -n 0 logs/*.log &)

export LD_LIBRARY_PATH=\$BASE_DIR/runtimes/hiphop-php/lib:\$BASE_DIR/runtimes/hiphop-php/lib/x86_64-linux-gnu:\\$LD_LIBRARY_PATH 
HHVM_BIN="\$BASE_DIR/runtimes/hiphop-php/bin/hhvm"

echo "-----> Starting \$(\$HHVM_BIN --version)" | head -n 1
\$HHVM_BIN --mode server --config \$BASE_DIR/run/hhvm.hdf
EOF
chmod +x bin/start.sh

echo "-----> Done with compile"
