#!/usr/bin/env ruby
require 'uri'
require 'json'

puts "(init_db) Starting..."

if ENV['DATABASE_URL'].nil?
	puts "ERROR: ENV['DATABASE_URL'] must be set to the WordPress database, eg DATABASE_URL=mysql://username:password@host:3306/database_name"
	exit 1
end
if ENV['DATABASE_SQL_DUMP'].nil?
	puts "ERROR: ENV['DATABASE_SQL_DUMP'] must be set to the full path for the initial DB, eg DATABASE_SQL_DUMP=/app/app/db/wordpress.master.sql"
	exit 2
end

db = URI.parse(ENV['DATABASE_URL'] )
database = db.path[1..-1] #drop the leading /

database_exists_count = `mysql information_schema --execute "show databases like '#{database}';"`
if (database_exists_count == 0)
	puts "Creating #{database}"
	`mysql information_schema --execute 'create database #{database};'`
else
	puts "Database #{database} already exists"
end

wp_table_count = `mysql #{database} --execute "show tables like 'wp_%';" | wc -l`
if (wp_table_count == 0)
	puts "No wp_ tables detected in database: #{database}"
  puts "Installing #{ENV['DATABASE_SQL_DUMP']} into #{database}"
	`mysql #{database} < #{ENV['DATABASE_SQL_DUMP']})`
else
	puts "wp_ tables already exist in database: #{database}"
	if ENV['DATABASE_ALWAYS_REFRESH'] == "true"
    puts "ENV['DATABASE_ALWAYS_REFRESH'] = #{ENV['DATABASE_ALWAYS_REFRESH']}, so refreshing database: #{database}"
    all_wp_tables = `mysql #{database} --execute "show tables like 'wp_%'" | awk '{ print $1}' | grep -v '^Tables'`
    all_wp_tables.split(/\n/).each do | table |
    	puts "dropping table #{table}"
    	`mysql #{database} --execute 'drop table #{table};'`
    end
    puts "Installing #{ENV['DATABASE_SQL_DUMP']} into #{database}"
    `mysql #{database} < #{ENV['DATABASE_SQL_DUMP']}`
  else
  	puts "Database: #{database} NOT refreshed, as ENV['DATABASE_ALWAYS_REFRESH'] != true"
  end
end

if ENV['VCAP_APPLICATION'].nil?
  puts "WARNING: ENV['VCAP_APPLICATION'] should be set"
else
  vcap_application = JSON.parse(ENV['VCAP_APPLICATION'])
  old_url = `/app/app/bin/wp option get siteurl`.strip
  new_url = "http://#{vcap_application['uris'][0]}"
  puts "Updating url from #{old_url} to #{new_url}"
  puts `/app/app/bin/wp search-replace #{old_url} #{new_url} --network | tail -n 1`
end

puts "(init_db) Done!"